import cv2
import numpy as np

st_params=dict(maxCorners=30,qualityLevel=0.2,minDistance=2,blockSize=7)
lk_params=dict(winSize=(15,15),maxLevel=2,criteria=(cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT,10,1))

cap=cv2.VideoCapture('C://Users//admin//anaconda3//object tracking//run.mp4')
color=(0,255,0)
ret,first_frame=cap.read()
prev_gray=cv2.cvtColor(first_frame,cv2.COLOR_BGR2GRAY)
prev=cv2.goodFeaturesToTrack(prev_gray,mask=None,**st_params)
mask=np.zeros_like(first_frame)


while(cap.isOpened()):

   ret,frame=cap.read(); 
   
   gray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    
   next,status,error=cv2.calcOpticalFlowPyrLK(prev_gray,gray,prev,None,**lk_params)
    
    good_old=prev[status==1]
    
    good_new=next[status==1]

    for i,(new,old) in enumerate(zip(good_new,good_old)):
   
        a,b=new.ravel()
 
        c,d=old.ravel()
        
        mask=cv2.line(mask,(a,b),(c,d),color,2)
       
        frame=cv2.circle(frame,(a,b),3,color,-1)
        

    output=cv2.add(frame,mask)

    prev_gray=gray.copy()
    
    prev=good_new.reshape(-1,1,2)
  
    cv2.imshow("Optical Flow",output)
    
    
    if cv2.waitKey(300) & 0xFF==ord("q"):
        break
        
# Always remember renu,first release then destroy
cap.release()
cv2.destroyAllWindows()
